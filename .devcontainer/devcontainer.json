{
	"name": "Python 3.12 and Poetry",
	"image": "mcr.microsoft.com/devcontainers/python:3.12",
	// It will make things easier if you run multiple devcontainers, keeping the auth in the host
	// so you wont lose it if rebuilding and going to another devcontainers of same
	// ATTENTION ONLY if you run more then one AWS account using the same host account
	// "runArgs": [
	//     "-v", "${localEnv:HOME}/.aws:/root/.aws"
	// ],
	"mounts": [
		"source=${localEnv:HOME}${localEnv:USERPROFILE}/.aws,target=/root/.aws,type=bind,consistency=cached"
	],
	// Features to add to the dev container. More info: https://containers.dev/features.
	"features": {
		"ghcr.io/devcontainers-contrib/features/pipx-package:1": {},
		"ghcr.io/devcontainers-contrib/features/poetry:2": {},
		"ghcr.io/devcontainers-contrib/features/npm-package:1": {}
	},
	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"extensions": [
				"streetsidesoftware.code-spell-checker",
				"aaron-bond.better-comments",
				"ms-python.python",
				"ms-python.vscode-pylance",
				"lextudio.restructuredtext-pack",
				"ms-python.isort",
				"ms-python.black-formatter",
				"DavidAnson.vscode-markdownlint",
				"esbenp.prettier-vscode",
				"humao.rest-client",
				"njpwerner.autodocstring",
				"almenon.arepl",
				"kaih2o.python-resource-monitor",
				"VisualStudioExptTeam.intellicode-api-usage-examples",
				"tamasfe.even-better-toml",
				"ms-azuretools.vscode-docker",
				"ms-toolsai.jupyter",
				"ms-toolsai.jupyter-keymap",
				"ms-toolsai.jupyter-renderers",
				"ms-toolsai.vscode-jupyter-slideshow",
				"ms-toolsai.vscode-jupyter-cell-tags"
			],
			"settings": {
				"[python]": {
					"editor.defaultFormatter": "ms-python.black-formatter",
					"editor.formatOnSave": true,
					"editor.codeActionsOnSave": {
						"source.organizeImports": "always"
					}
				},
				"isort.args": [
					"--profile",
					"black"
				],
				"black-formatter.args": [
					"--line-length",
					"120"
				],
				"python.testing.pytestArgs": [
					"tests"
				],
				"python.testing.unittestEnabled": false,
				"python.testing.pytestEnabled": true,
				"python.analysis.typeCheckingMode": "basic",
				"python.analysis.autoImportCompletions": true,
				// "python.defaultInterpreterPath": "/usr/local/bin/python",
				"python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
				"python.formatting.blackPath": "/usr/local/py-utils/bin/black",
				"python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
				"python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
				"python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
				"python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
				"python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
				"python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
				"python.linting.pylintPath": "/usr/local/py-utils/bin/pylint"
			}
		}
	},
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [9000],
	// Use 'portsAttributes' to set default properties for specific forwarded ports.
	// More info: https://containers.dev/implementors/json_reference/#port-attributes
	// "portsAttributes": {
	// 	"9000": {
	// 		"label": "Hello Remote World",
	// 		"onAutoForward": "notify"
	// 	}
	// },
	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	"remoteUser": "root",
	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "./.devcontainer/post-create.sh"
}